name: Criação de Infra na Digital Ocean

on:
  push:
    branches:
      - main
      
jobs:
  deploy_iaac:
    runs-on: ubuntu-latest
    env:
      DESTROY_INFRA: ${{ vars.DESTROY_INFRA }}
    steps:
      - name: Validando variável DESTROY_INFRA
        if: ${{ env.DESTROY_INFRA != 'true' && env.DESTROY_INFRA != 'false' }}
        run: |
          echo "A variável deve conter o valor true ou false"
          echo "Setar o valor em 'Actions secrets and variables'"
          exit 1
          
      - name: Download dos artefatos
        uses: actions/checkout@v4.1.5

      - name: Processo de criação das chaves SSH
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.PRIVATE_KEY }}' >> ~/.ssh/terraform-do
          chmod 600 ~/.ssh/terraform-do
          echo '${{ secrets.PUBLIC_KEY }}' >> ~/.ssh/terraform-do.pub

      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        #run: terraform init -backend-config="conn_str=${{ secrets.PG_CONN_STR }}"
        run: ls -ltr; terraform init
        
      - name: Terraform Validate
        run: terraform validate
        
      - name: Terraform Apply/Destroy
        run: |
          if [ "${{ env.DESTROY_INFRA }}" != "true" ]; then
            terraform apply --auto-approve -var do_token=${{ secrets.DO_TOKEN }}
          elif [ "${{ env.DESTROY_INFRA }}" == "true" ]; then
            terraform destroy --auto-approve -var do_token=${{ secrets.DO_TOKEN }}
          fi
          
      - name: Configuração do arquivo ansible.cfg
        if: ${{ env.DESTROY_INFRA != 'true' }}
        run: |
            cat > ansible.cfg <<EOF
            [defaults]
            host_key_checking = False
            EOF

      - name: Executando o ansible-playbook
        if: ${{ env.DESTROY_INFRA != 'true' }}
        run: |
          ansible-playbook -i ansible/hosts playbook-install-nginx.yaml
