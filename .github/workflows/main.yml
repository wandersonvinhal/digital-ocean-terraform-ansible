name: Criação de Infra na Digital Ocean

on:
  workflow_dispatch:
    inputs:
      workspace:
        description: "Escolha o workspace (dev/staging/prod)"
        required: true
        default: "dev"
      destroy_infra:
        description: "Deseja destruir a infraestrutura? (true/false)"
        required: true
        default: "false"
      vms_count:
        description: "Número de VMs a criar"
        required: true
        default: "2"
      region:
        description: "Região para criar as VMs"
        required: true
        default: "nyc1"

jobs:
  deploy_iaac:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.event.inputs.workspace }}
      DESTROY_INFRA: ${{ github.event.inputs.destroy_infra }}
      VMS_COUNT: ${{ github.event.inputs.vms_count }}
      REGION: ${{ github.event.inputs.region }}
    steps:
      - name: Validando variável DESTROY_INFRA
        if: ${{ env.DESTROY_INFRA != 'true' && env.DESTROY_INFRA != 'false' }}
        run: |
          echo "A variável deve conter o valor true ou false"
          exit 1
          
      - name: Download dos artefatos
        uses: actions/checkout@v4.1.5

      - name: Processo de criação das chaves SSH
        run: |
          mkdir -p ~/.ssh
          echo '${{ secrets.PRIVATE_KEY }}' >> ~/.ssh/terraform-do
          chmod 600 ~/.ssh/terraform-do
          echo '${{ secrets.PUBLIC_KEY }}' >> ~/.ssh/terraform-do.pub

      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init -backend-config="workspace=${WORKSPACE}"
 
      - name: Terraform Validate
        run: terraform validate
        
      - name: Terraform Apply/Destroy
        run: |
          if [ "${{ env.DESTROY_INFRA }}" != "true" ]; then
            terraform apply --auto-approve \
              -var "do_token=${{ secrets.DO_TOKEN }}" \
              -var "vms_count=${VMS_COUNT}" \
              -var "region=${REGION}"
          else
            terraform destroy --auto-approve \
              -var "do_token=${{ secrets.DO_TOKEN }}" \
              -var "vms_count=${VMS_COUNT}" \
              -var "region=${REGION}"
          fi
          
      - name: Configuração do arquivo ansible.cfg
        if: ${{ env.DESTROY_INFRA != 'true' }}
        run: |
            cat > ansible.cfg <<EOF
            [defaults]
            host_key_checking = False
            EOF

      - name: Executando o ansible-playbook
        if: ${{ env.DESTROY_INFRA != 'true' }}
        run: |
          ansible-playbook -i ansible/hosts playbook-install-nginx.yaml
